# from macpath import split

# 第4章 リスト
# 4.4 リストの生成
# 単一型（整数、文字列）のリスト生成
# 要素として1,3,5,7,9を持つリストlist_iを作成してください。 要素として'Tokyo', 'Nagoya', 'Osaka'を持つリストlist_strを作成してください。



list_i = [1,3,5,7,9]
list_str = ['Tokyo', 'Nagoya', 'Osaka']

# 複数型（整数、実数、文字列）のリスト生成
# 要素として1, 'Tokyo', 2, 'Osaka', 3, 'Nagoya'を持つリストlist_tree_majorを作成してください。
list_three_major = [1, 'Tokyo', 2, 'Osaka', 3, 'Nagoya']

# range関数による整数型リストの生成
# 0から99までの整数を要素に持つリストlist_scoreを作成してください。
list_score = [range(100)]

# 文字列の空白による分割（split関数）
# 英文（Simple is better than complex.）を単語で区切ったリストlist_zen_of_pythonを作成してください。
# list_zen_of_python = split("Simple is better than complex.")

# Pythonの哲学をまとめた文章が開発環境に含まれています。
# ```python
# >>> import this
# ```
# 4.6 リストへの要素へのアクセス
# リストの添字による値の取得
# 1から10までの要素を持つリストの3と5番目の要素を取り出してください。
print(list1(range(1,10)))

# リストの添えによる値の変更
# 1から10までの要素を持つリストの3と5番目の要素を0に変更してください。

# リストの長さの取得
# 0から50の要素を持つリストを作成し、len関数で長さを求めてください。また、最後から2番目の要素を0に変更してください。

# 4.7 負の添え字とスライス
# 1から10までのリストを生成し、最後から2番目の要素を0に変更してください。
# 1から10までのリストを生成し、最後から11番目の要素を0に変更してください。

# 1から10までのリストを生成し、最初の2つと最後の2つの要素を取り出してください。

# 0～100までのリストを生成し、前半部分と後半部分を別々のリストに取り出してください。

# 0～100までのリストを生成し、中心の要素から10個の要素（中心の要素から前後5つ）を

# 取り出してください。